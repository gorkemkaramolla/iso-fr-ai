# version: '3.8'

# services:
#   fluentbit:
#     image: fluent/fluent-bit:latest
#     volumes:
#       - ./fluent-bit/config:/fluent-bit/etc
#     ports:
#       - "24224:24224"
#     networks:
#       - isoai-network
#     depends_on:
#       - solr

#   solr:
#     image: solr:latest
#     ports:
#       - "8983:8983"
#     volumes:
#       - solr_data:/var/solr
#     command:
#       - solr-precreate
#       - logs
#     environment:
#       SOLR_HEAP: "1500m"
#     networks:
#       - isoai-network
#     depends_on:
#       - mongo

#   mongo:
#     image: mongo:latest
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo_data:/data/db
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
#       MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
#     networks:
#       - isoai-network

#   auth_service:
#     build: ./iso-auth
#     ports:
#       - "5001:5001"
#     env_file:
#       - .env
#     networks:
#       - isoai-network
#     logging:
#       driver: "fluentd"
#       options:
#         fluentd-address: localhost:24224
#         tag: auth_service
#     depends_on:
#       - mongo
#       - solr
#       - fluentbit

#   # face_recognition_service:
#   #   build: ./iso-fr
#   #   ports:
#   #     - "5002:5002"
#   #   env_file:
#   #     - .env
#   #   volumes:
#   #     - face_recognition_data:/app/data
#   #   networks:
#   #     - isoai-network
#   #   logging:
#   #     driver: "fluentd"
#   #     options:
#   #       fluentd-address: localhost:24224
#   #       tag: face_recognition_service
#   #   depends_on:
#   #     - mongo
#   #     - solr
#   #     - fluentbit

#   speaker_diarization_service:
#     build: ./iso-diarize
#     ports:
#       - "5003:5003"
#     env_file:
#       - .env
#     volumes:
#       - audio_data:/app/temp
#     networks:
#       - isoai-network
#     logging:
#       driver: "fluentd"
#       options:
#         fluentd-address: localhost:24224
#         tag: speaker_diarization_service
#     depends_on:
#       - mongo
#       - solr
#       - fluentbit

#   utils_service:
#     build: ./iso-utils
#     ports:
#       - "5004:5004"
#     env_file:
#       - .env
#     volumes:
#       - personel_images:/app/personel_images
#       - /var/run/docker.sock:/var/run/docker.sock
#     networks:
#       - isoai-network
#     logging:
#       driver: "fluentd"
#       options:
#         fluentd-address: localhost:24224
#         tag: utils_service
#     depends_on:
#       - mongo
#       - solr
#       - fluentbit

# volumes:
#   mongo_data:
#   solr_data:
#   # face_recognition_data:
#   personel_images:
#   audio_data:

# networks:
#   isoai-network:
#     driver: bridge
version: '3.8'

services:
  fluentbit:
    image: fluent/fluent-bit:latest
    volumes:
      - ./fluent-bit/config:/fluent-bit/etc
    ports:
      - '24224:24224'
    networks:
      - isoai-network
    depends_on:
      - solr

  solr:
    image: isoai/ai:solr
    ports:
      - '8983:8983'
    volumes:
      - solr_data:/var/solr
      - ./solr-entrypoint.sh:/scripts/solr-entrypoint.sh
    environment:
      SOLR_HEAP: '1500m'
    networks:
      - isoai-network
    depends_on:
      - mongo
    entrypoint: ['/bin/bash', '/scripts/solr-entrypoint.sh']

  mongo:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_PASSWORD}
    networks:
      - isoai-network

  auth_service:
    build:
      context: ./iso-auth
      dockerfile: Dockerfile
    ports:
      - '5001:5001'
    env_file:
      - .env
    volumes:
      - ./iso-auth:/app # Bind mount for development
      - ./config.xml:/app/config.xml
      - ./config.py:/app/config.py
    networks:
      - isoai-network
    logging:
      driver: 'fluentd'
      options:
        fluentd-address: localhost:24224
        tag: auth_service
    depends_on:
      - mongo
      - solr
      - fluentbit

  face_recognition_service:
    build:
      context: ./iso-fr
      dockerfile: Dockerfile
    ports:
      - '5002:5002'
    env_file:
      - .env
    volumes:
      - ./iso-fr:/app # Bind mount for development
      # - face_recognition_data:/app/data
      - ./config.xml:/app/config.xml
      - ./config.py:/app/config.py
      # - ./iso-fr/services/models/buffalo_l:/app/services/models/buffalo_l
      - ~/.insightface/models/buffalo_l:/app/services/models/buffalo_l
    networks:
      - isoai-network
    logging:
      driver: 'fluentd'
      options:
        fluentd-address: localhost:24224
        tag: face_recognition_service
    depends_on:
      - utils_service
      - mongo
      - solr
      - fluentbit

  speaker_diarization_service:
    build:
      context: ./iso-diarize
      dockerfile: Dockerfile
    ports:
      - '5003:5003'
    env_file:
      - .env
    volumes:
      - ./iso-diarize:/app # Bind mount for development
      - ./config.xml:/app/config.xml
      - ./config.py:/app/config.py
      - large_v3_data:/app/services/large-v3 # Add this volume for large-v3 data
    networks:
      - isoai-network
    logging:
      driver: 'fluentd'
      options:
        fluentd-address: localhost:24224
        tag: speaker_diarization_service
    depends_on:
      - mongo
      - solr
      - fluentbit

  utils_service:
    build:
      context: ./iso-utils
      dockerfile: Dockerfile
    ports:
      - '5004:5004'
    env_file:
      - .env
    volumes:
      - ./iso-utils:/app # Bind mount for development
      - personel_images:/app/personel_images
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config.xml:/app/config.xml
      - ./config.py:/app/config.py
    networks:
      - isoai-network
    logging:
      driver: 'fluentd'
      options:
        fluentd-address: localhost:24224
        tag: utils_service
    depends_on:
      - mongo
      - solr
      - fluentbit

volumes:
  mongo_data:
  solr_data:
  # face_recognition_data:
  large_v3_data:
  personel_images:

networks:
  isoai-network:
    driver: bridge
